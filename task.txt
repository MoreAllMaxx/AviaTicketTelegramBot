Описание
На этом этапе  внедряем в бота для telegram сценарий заказа авиабилетов на самолет.
Бот должен поддерживать команды:
/ticket — начинает сценарий заказа билетов;
/help — выдает справку о том, как работает робот.

В приветственном сообщении и в ответ на нераспознанное сообщение можно продублировать текст /help.

Подготовка.
Для поиска рейсов по введенным данным необходим диспетчер. В реальной жизни это может быть API
к серверу поиска билетов вашей авиакомпании, а в курсовой работе требуется написать диспетчер самостоятельно.

Диспетчер — это функция, которая отдает список рейсов по городу отправления, городу назначения и заданной дате
(выдает 5 рейсов, ближайших к заданной дате, но только среди будущих — на вчера купить билет нельзя).

Хранить города и расписание рекомендуется в настройках в виде конфига.

В рамках задания хотя бы один рейс должен иметь периодичность по дням недели и хотя бы один по дням месяца.
Например, из Москвы в Лондон — по понедельникам и средам в 10:00,
а из Лондона в Париж — 10-го и 20-го числа каждого месяца в 15:30.

Хотя бы между одной парой городов не должно быть сообщения.

Сценарий заказа билетов:

Шаг 1. Ввод города отправления. Каждый город должен распознаваться,
если пользователь пишет его с маленькой буквы или меняет окончание (использовать регулярные выражения).
Если пользователь вводит город неправильно, следует предложить ему варианты городов, в которые есть рейсы.

Шаг 2. Ввод города назначения. Правила распознавания те же.

Шаг 2*. Если между выбранными городами нет рейса, говорим об этом и завершаем сценарий.

Шаг 3. Ввод даты: спрашиваем у пользователя дату вылета в формате 01-05-2019.

Шаг 4. Выбор рейса. С помощью диспетчера выдаем 5 ближайших к указанной дате рейсов с указанием их номеров
и просим ввести понравившийся номер.

Шаг 5. Уточняем количество мест (от 1 до 5).

Шаг 6. Предлагаем написать комментарий в произвольной форме.

Шаг 7. Уточняем введенные данные. Пользователь должен ввести "да" или "нет". Если пользователь вводит "нет",
сценарий завершается с предложением попробовать еще раз. В “боевых” условиях стоит уточнить
у пользователя неверные поля и изменить только их, но в рамках учебной практики,
чтобы излишне не усложнять код условиями, можно запустить весь сценарий заново.

Шаг 8. Запрашиваем номер телефона.

Шаг 9. Сообщаем пользователю, что с ним свяжутся по введенному номеру.

Если во время сценария вводится команда (/ticket или /help), то сценарий останавливается и выполняется команда
(в отличие от примера, разобранного в записи).

Формулировки сообщений остаются на ваше усмотрение.

По желанию, можно расширить список команд и распознавать их не только по ведущему "/", но и на естественном языке
(например, по ключевым словам).

Не забудьте покрыть написанный код тестами.